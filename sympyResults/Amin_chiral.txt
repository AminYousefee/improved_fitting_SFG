lab dmu Matrix([[mua*(-sin(phi)*sin(psi) + cos(phi)*cos(psi)*cos(theta)) + mub*(-sin(phi)*cos(psi) - sin(psi)*cos(phi)*cos(theta)) + muc*sin(theta)*cos(phi)], [mua*(sin(phi)*cos(psi)*cos(theta) + sin(psi)*cos(phi)) + mub*(-sin(phi)*sin(psi)*cos(theta) + cos(phi)*cos(psi)) + muc*sin(phi)*sin(theta)], [-mua*sin(theta)*cos(psi) + mub*sin(psi)*sin(theta) + muc*cos(theta)]])
lab dalpha Matrix([[(-sin(phi)*sin(psi) + cos(phi)*cos(psi)*cos(theta))*(alphaaa*(-sin(phi)*sin(psi) + cos(phi)*cos(psi)*cos(theta)) + alphaba*(-sin(phi)*cos(psi) - sin(psi)*cos(phi)*cos(theta)) + alphaca*sin(theta)*cos(phi)) + (-sin(phi)*cos(psi) - sin(psi)*cos(phi)*cos(theta))*(alphaab*(-sin(phi)*sin(psi) + cos(phi)*cos(psi)*cos(theta)) + alphabb*(-sin(phi)*cos(psi) - sin(psi)*cos(phi)*cos(theta)) + alphacb*sin(theta)*cos(phi)) + (alphaac*(-sin(phi)*sin(psi) + cos(phi)*cos(psi)*cos(theta)) + alphabc*(-sin(phi)*cos(psi) - sin(psi)*cos(phi)*cos(theta)) + alphacc*sin(theta)*cos(phi))*sin(theta)*cos(phi), (-sin(phi)*sin(psi)*cos(theta) + cos(phi)*cos(psi))*(alphaab*(-sin(phi)*sin(psi) + cos(phi)*cos(psi)*cos(theta)) + alphabb*(-sin(phi)*cos(psi) - sin(psi)*cos(phi)*cos(theta)) + alphacb*sin(theta)*cos(phi)) + (sin(phi)*cos(psi)*cos(theta) + sin(psi)*cos(phi))*(alphaaa*(-sin(phi)*sin(psi) + cos(phi)*cos(psi)*cos(theta)) + alphaba*(-sin(phi)*cos(psi) - sin(psi)*cos(phi)*cos(theta)) + alphaca*sin(theta)*cos(phi)) + (alphaac*(-sin(phi)*sin(psi) + cos(phi)*cos(psi)*cos(theta)) + alphabc*(-sin(phi)*cos(psi) - sin(psi)*cos(phi)*cos(theta)) + alphacc*sin(theta)*cos(phi))*sin(phi)*sin(theta), -(alphaaa*(-sin(phi)*sin(psi) + cos(phi)*cos(psi)*cos(theta)) + alphaba*(-sin(phi)*cos(psi) - sin(psi)*cos(phi)*cos(theta)) + alphaca*sin(theta)*cos(phi))*sin(theta)*cos(psi) + (alphaab*(-sin(phi)*sin(psi) + cos(phi)*cos(psi)*cos(theta)) + alphabb*(-sin(phi)*cos(psi) - sin(psi)*cos(phi)*cos(theta)) + alphacb*sin(theta)*cos(phi))*sin(psi)*sin(theta) + (alphaac*(-sin(phi)*sin(psi) + cos(phi)*cos(psi)*cos(theta)) + alphabc*(-sin(phi)*cos(psi) - sin(psi)*cos(phi)*cos(theta)) + alphacc*sin(theta)*cos(phi))*cos(theta)], [(-sin(phi)*sin(psi) + cos(phi)*cos(psi)*cos(theta))*(alphaaa*(sin(phi)*cos(psi)*cos(theta) + sin(psi)*cos(phi)) + alphaba*(-sin(phi)*sin(psi)*cos(theta) + cos(phi)*cos(psi)) + alphaca*sin(phi)*sin(theta)) + (-sin(phi)*cos(psi) - sin(psi)*cos(phi)*cos(theta))*(alphaab*(sin(phi)*cos(psi)*cos(theta) + sin(psi)*cos(phi)) + alphabb*(-sin(phi)*sin(psi)*cos(theta) + cos(phi)*cos(psi)) + alphacb*sin(phi)*sin(theta)) + (alphaac*(sin(phi)*cos(psi)*cos(theta) + sin(psi)*cos(phi)) + alphabc*(-sin(phi)*sin(psi)*cos(theta) + cos(phi)*cos(psi)) + alphacc*sin(phi)*sin(theta))*sin(theta)*cos(phi), (-sin(phi)*sin(psi)*cos(theta) + cos(phi)*cos(psi))*(alphaab*(sin(phi)*cos(psi)*cos(theta) + sin(psi)*cos(phi)) + alphabb*(-sin(phi)*sin(psi)*cos(theta) + cos(phi)*cos(psi)) + alphacb*sin(phi)*sin(theta)) + (sin(phi)*cos(psi)*cos(theta) + sin(psi)*cos(phi))*(alphaaa*(sin(phi)*cos(psi)*cos(theta) + sin(psi)*cos(phi)) + alphaba*(-sin(phi)*sin(psi)*cos(theta) + cos(phi)*cos(psi)) + alphaca*sin(phi)*sin(theta)) + (alphaac*(sin(phi)*cos(psi)*cos(theta) + sin(psi)*cos(phi)) + alphabc*(-sin(phi)*sin(psi)*cos(theta) + cos(phi)*cos(psi)) + alphacc*sin(phi)*sin(theta))*sin(phi)*sin(theta), -(alphaaa*(sin(phi)*cos(psi)*cos(theta) + sin(psi)*cos(phi)) + alphaba*(-sin(phi)*sin(psi)*cos(theta) + cos(phi)*cos(psi)) + alphaca*sin(phi)*sin(theta))*sin(theta)*cos(psi) + (alphaab*(sin(phi)*cos(psi)*cos(theta) + sin(psi)*cos(phi)) + alphabb*(-sin(phi)*sin(psi)*cos(theta) + cos(phi)*cos(psi)) + alphacb*sin(phi)*sin(theta))*sin(psi)*sin(theta) + (alphaac*(sin(phi)*cos(psi)*cos(theta) + sin(psi)*cos(phi)) + alphabc*(-sin(phi)*sin(psi)*cos(theta) + cos(phi)*cos(psi)) + alphacc*sin(phi)*sin(theta))*cos(theta)], [(-sin(phi)*sin(psi) + cos(phi)*cos(psi)*cos(theta))*(-alphaaa*sin(theta)*cos(psi) + alphaba*sin(psi)*sin(theta) + alphaca*cos(theta)) + (-sin(phi)*cos(psi) - sin(psi)*cos(phi)*cos(theta))*(-alphaab*sin(theta)*cos(psi) + alphabb*sin(psi)*sin(theta) + alphacb*cos(theta)) + (-alphaac*sin(theta)*cos(psi) + alphabc*sin(psi)*sin(theta) + alphacc*cos(theta))*sin(theta)*cos(phi), (-sin(phi)*sin(psi)*cos(theta) + cos(phi)*cos(psi))*(-alphaab*sin(theta)*cos(psi) + alphabb*sin(psi)*sin(theta) + alphacb*cos(theta)) + (sin(phi)*cos(psi)*cos(theta) + sin(psi)*cos(phi))*(-alphaaa*sin(theta)*cos(psi) + alphaba*sin(psi)*sin(theta) + alphaca*cos(theta)) + (-alphaac*sin(theta)*cos(psi) + alphabc*sin(psi)*sin(theta) + alphacc*cos(theta))*sin(phi)*sin(theta), -(-alphaaa*sin(theta)*cos(psi) + alphaba*sin(psi)*sin(theta) + alphaca*cos(theta))*sin(theta)*cos(psi) + (-alphaab*sin(theta)*cos(psi) + alphabb*sin(psi)*sin(theta) + alphacb*cos(theta))*sin(psi)*sin(theta) + (-alphaac*sin(theta)*cos(psi) + alphabc*sin(psi)*sin(theta) + alphacc*cos(theta))*cos(theta)]])
for IR: dmu in lab
iso tropic (all uniform) which means we have triple integration
dmudQ X (mua**2 + mub**2 + muc**2)/3
dmudQ Y (mua**2 + mub**2 + muc**2)/3
dmudQ Z (mua**2 + mub**2 + muc**2)/3
phi, psi uniform (theta unspecified)
dmudQ X (mua**2*cos(theta)**2 + mua**2 + mub**2*cos(theta)**2 + mub**2 + 2*muc**2*sin(theta)**2)/4
dmudQ Y (mua**2*cos(theta)**2 + mua**2 + mub**2*cos(theta)**2 + mub**2 + 2*muc**2*sin(theta)**2)/4
dmudQ Z (mua**2*sin(theta)**2 + mub**2*sin(theta)**2 + 2*muc**2*cos(theta)**2)/2
for Raman
iso tropic (all uniform)
dalphadQ XX (3*alphaaa**2 + 2*alphaaa*alphabb + 2*alphaaa*alphacc + alphaab**2 + 2*alphaab*alphaba + alphaac**2 + 2*alphaac*alphaca + alphaba**2 + 3*alphabb**2 + 2*alphabb*alphacc + alphabc**2 + 2*alphabc*alphacb + alphaca**2 + alphacb**2 + 3*alphacc**2)/15
dalphadQ XY (alphaaa**2 - alphaaa*alphabb - alphaaa*alphacc + 2*alphaab**2 - alphaab*alphaba + 2*alphaac**2 - alphaac*alphaca + 2*alphaba**2 + alphabb**2 - alphabb*alphacc + 2*alphabc**2 - alphabc*alphacb + 2*alphaca**2 + 2*alphacb**2 + alphacc**2)/15
dalphadQ XZ (alphaaa**2 - alphaaa*alphabb - alphaaa*alphacc + 2*alphaab**2 - alphaab*alphaba + 2*alphaac**2 - alphaac*alphaca + 2*alphaba**2 + alphabb**2 - alphabb*alphacc + 2*alphabc**2 - alphabc*alphacb + 2*alphaca**2 + 2*alphacb**2 + alphacc**2)/15
dalphadQ YX (alphaaa**2 - alphaaa*alphabb - alphaaa*alphacc + 2*alphaab**2 - alphaab*alphaba + 2*alphaac**2 - alphaac*alphaca + 2*alphaba**2 + alphabb**2 - alphabb*alphacc + 2*alphabc**2 - alphabc*alphacb + 2*alphaca**2 + 2*alphacb**2 + alphacc**2)/15
dalphadQ YY (3*alphaaa**2 + 2*alphaaa*alphabb + 2*alphaaa*alphacc + alphaab**2 + 2*alphaab*alphaba + alphaac**2 + 2*alphaac*alphaca + alphaba**2 + 3*alphabb**2 + 2*alphabb*alphacc + alphabc**2 + 2*alphabc*alphacb + alphaca**2 + alphacb**2 + 3*alphacc**2)/15
dalphadQ YZ (alphaaa**2 - alphaaa*alphabb - alphaaa*alphacc + 2*alphaab**2 - alphaab*alphaba + 2*alphaac**2 - alphaac*alphaca + 2*alphaba**2 + alphabb**2 - alphabb*alphacc + 2*alphabc**2 - alphabc*alphacb + 2*alphaca**2 + 2*alphacb**2 + alphacc**2)/15
dalphadQ ZX (alphaaa**2 - alphaaa*alphabb - alphaaa*alphacc + 2*alphaab**2 - alphaab*alphaba + 2*alphaac**2 - alphaac*alphaca + 2*alphaba**2 + alphabb**2 - alphabb*alphacc + 2*alphabc**2 - alphabc*alphacb + 2*alphaca**2 + 2*alphacb**2 + alphacc**2)/15
dalphadQ ZY (alphaaa**2 - alphaaa*alphabb - alphaaa*alphacc + 2*alphaab**2 - alphaab*alphaba + 2*alphaac**2 - alphaac*alphaca + 2*alphaba**2 + alphabb**2 - alphabb*alphacc + 2*alphabc**2 - alphabc*alphacb + 2*alphaca**2 + 2*alphacb**2 + alphacc**2)/15
dalphadQ ZZ (3*alphaaa**2 + 2*alphaaa*alphabb + 2*alphaaa*alphacc + alphaab**2 + 2*alphaab*alphaba + alphaac**2 + 2*alphaac*alphaca + alphaba**2 + 3*alphabb**2 + 2*alphabb*alphacc + alphabc**2 + 2*alphabc*alphacb + alphaca**2 + alphacb**2 + 3*alphacc**2)/15
phi, psi uniform (theta unspecified)
dalphadQ XX (9*alphaaa**2*sin(theta)**4 - 24*alphaaa**2*sin(theta)**2 + 24*alphaaa**2 + 6*alphaaa*alphabb*sin(theta)**4 - 16*alphaaa*alphabb*sin(theta)**2 + 16*alphaaa*alphabb - 24*alphaaa*alphacc*sin(theta)**4 + 32*alphaaa*alphacc*sin(theta)**2 + 3*alphaab**2*sin(theta)**4 - 8*alphaab**2*sin(theta)**2 + 8*alphaab**2 + 6*alphaab*alphaba*sin(theta)**4 - 16*alphaab*alphaba*sin(theta)**2 + 16*alphaab*alphaba - 12*alphaac**2*sin(theta)**4 + 16*alphaac**2*sin(theta)**2 - 24*alphaac*alphaca*sin(theta)**4 + 32*alphaac*alphaca*sin(theta)**2 + 3*alphaba**2*sin(theta)**4 - 8*alphaba**2*sin(theta)**2 + 8*alphaba**2 + 9*alphabb**2*sin(theta)**4 - 24*alphabb**2*sin(theta)**2 + 24*alphabb**2 - 24*alphabb*alphacc*sin(theta)**4 + 32*alphabb*alphacc*sin(theta)**2 - 12*alphabc**2*sin(theta)**4 + 16*alphabc**2*sin(theta)**2 - 24*alphabc*alphacb*sin(theta)**4 + 32*alphabc*alphacb*sin(theta)**2 - 12*alphaca**2*sin(theta)**4 + 16*alphaca**2*sin(theta)**2 - 12*alphacb**2*sin(theta)**4 + 16*alphacb**2*sin(theta)**2 + 24*alphacc**2*sin(theta)**4)/64
dalphadQ XY (3*alphaaa**2*sin(theta)**4 - 8*alphaaa**2*sin(theta)**2 + 8*alphaaa**2 + 2*alphaaa*alphabb*sin(theta)**4 + 16*alphaaa*alphabb*sin(theta)**2 - 16*alphaaa*alphabb - 8*alphaaa*alphacc*sin(theta)**4 + alphaab**2*sin(theta)**4 - 24*alphaab**2*sin(theta)**2 + 24*alphaab**2 + 2*alphaab*alphaba*sin(theta)**4 + 16*alphaab*alphaba*sin(theta)**2 - 16*alphaab*alphaba - 4*alphaac**2*sin(theta)**4 + 16*alphaac**2*sin(theta)**2 - 8*alphaac*alphaca*sin(theta)**4 + alphaba**2*sin(theta)**4 - 24*alphaba**2*sin(theta)**2 + 24*alphaba**2 + 3*alphabb**2*sin(theta)**4 - 8*alphabb**2*sin(theta)**2 + 8*alphabb**2 - 8*alphabb*alphacc*sin(theta)**4 - 4*alphabc**2*sin(theta)**4 + 16*alphabc**2*sin(theta)**2 - 8*alphabc*alphacb*sin(theta)**4 - 4*alphaca**2*sin(theta)**4 + 16*alphaca**2*sin(theta)**2 - 4*alphacb**2*sin(theta)**4 + 16*alphacb**2*sin(theta)**2 + 8*alphacc**2*sin(theta)**4)/64
dalphadQ XZ -(-8*alphaaa**2*sin(theta)**2 + 3*alphaaa**2*cos(4*theta) - 3*alphaaa**2 + 16*alphaaa*alphabb*sin(theta)**2 + 2*alphaaa*alphabb*cos(4*theta) - 2*alphaaa*alphabb - 8*alphaaa*alphacc*cos(4*theta) + 8*alphaaa*alphacc - 24*alphaab**2*sin(theta)**2 + alphaab**2*cos(4*theta) - alphaab**2 + 16*alphaab*alphaba*sin(theta)**2 + 2*alphaab*alphaba*cos(4*theta) - 2*alphaab*alphaba - 32*alphaac**2*cos(theta)**4 - 32*alphaac**2*cos(theta)**2 - 8*alphaac*alphaca*cos(4*theta) + 8*alphaac*alphaca - 24*alphaba**2*sin(theta)**2 + alphaba**2*cos(4*theta) - alphaba**2 - 8*alphabb**2*sin(theta)**2 + 3*alphabb**2*cos(4*theta) - 3*alphabb**2 - 8*alphabb*alphacc*cos(4*theta) + 8*alphabb*alphacc - 32*alphabc**2*cos(theta)**4 - 32*alphabc**2*cos(theta)**2 - 8*alphabc*alphacb*cos(4*theta) + 8*alphabc*alphacb - 32*alphaca**2*sin(theta)**4 - 32*alphacb**2*sin(theta)**4 + 8*alphacc**2*cos(4*theta) - 8*alphacc**2)/128
dalphadQ YX (3*alphaaa**2*sin(theta)**4 - 8*alphaaa**2*sin(theta)**2 + 8*alphaaa**2 + 2*alphaaa*alphabb*sin(theta)**4 + 16*alphaaa*alphabb*sin(theta)**2 - 16*alphaaa*alphabb - 8*alphaaa*alphacc*sin(theta)**4 + alphaab**2*sin(theta)**4 - 24*alphaab**2*sin(theta)**2 + 24*alphaab**2 + 2*alphaab*alphaba*sin(theta)**4 + 16*alphaab*alphaba*sin(theta)**2 - 16*alphaab*alphaba - 4*alphaac**2*sin(theta)**4 + 16*alphaac**2*sin(theta)**2 - 8*alphaac*alphaca*sin(theta)**4 + alphaba**2*sin(theta)**4 - 24*alphaba**2*sin(theta)**2 + 24*alphaba**2 + 3*alphabb**2*sin(theta)**4 - 8*alphabb**2*sin(theta)**2 + 8*alphabb**2 - 8*alphabb*alphacc*sin(theta)**4 - 4*alphabc**2*sin(theta)**4 + 16*alphabc**2*sin(theta)**2 - 8*alphabc*alphacb*sin(theta)**4 - 4*alphaca**2*sin(theta)**4 + 16*alphaca**2*sin(theta)**2 - 4*alphacb**2*sin(theta)**4 + 16*alphacb**2*sin(theta)**2 + 8*alphacc**2*sin(theta)**4)/64
dalphadQ YY (9*alphaaa**2*sin(theta)**4 - 24*alphaaa**2*sin(theta)**2 + 24*alphaaa**2 + 6*alphaaa*alphabb*sin(theta)**4 - 16*alphaaa*alphabb*sin(theta)**2 + 16*alphaaa*alphabb - 24*alphaaa*alphacc*sin(theta)**4 + 32*alphaaa*alphacc*sin(theta)**2 + 3*alphaab**2*sin(theta)**4 - 8*alphaab**2*sin(theta)**2 + 8*alphaab**2 + 6*alphaab*alphaba*sin(theta)**4 - 16*alphaab*alphaba*sin(theta)**2 + 16*alphaab*alphaba - 12*alphaac**2*sin(theta)**4 + 16*alphaac**2*sin(theta)**2 - 24*alphaac*alphaca*sin(theta)**4 + 32*alphaac*alphaca*sin(theta)**2 + 3*alphaba**2*sin(theta)**4 - 8*alphaba**2*sin(theta)**2 + 8*alphaba**2 + 9*alphabb**2*sin(theta)**4 - 24*alphabb**2*sin(theta)**2 + 24*alphabb**2 - 24*alphabb*alphacc*sin(theta)**4 + 32*alphabb*alphacc*sin(theta)**2 - 12*alphabc**2*sin(theta)**4 + 16*alphabc**2*sin(theta)**2 - 24*alphabc*alphacb*sin(theta)**4 + 32*alphabc*alphacb*sin(theta)**2 - 12*alphaca**2*sin(theta)**4 + 16*alphaca**2*sin(theta)**2 - 12*alphacb**2*sin(theta)**4 + 16*alphacb**2*sin(theta)**2 + 24*alphacc**2*sin(theta)**4)/64
dalphadQ YZ -(-8*alphaaa**2*sin(theta)**2 + 3*alphaaa**2*cos(4*theta) - 3*alphaaa**2 + 16*alphaaa*alphabb*sin(theta)**2 + 2*alphaaa*alphabb*cos(4*theta) - 2*alphaaa*alphabb - 8*alphaaa*alphacc*cos(4*theta) + 8*alphaaa*alphacc - 24*alphaab**2*sin(theta)**2 + alphaab**2*cos(4*theta) - alphaab**2 + 16*alphaab*alphaba*sin(theta)**2 + 2*alphaab*alphaba*cos(4*theta) - 2*alphaab*alphaba - 32*alphaac**2*cos(theta)**4 - 32*alphaac**2*cos(theta)**2 - 8*alphaac*alphaca*cos(4*theta) + 8*alphaac*alphaca - 24*alphaba**2*sin(theta)**2 + alphaba**2*cos(4*theta) - alphaba**2 - 8*alphabb**2*sin(theta)**2 + 3*alphabb**2*cos(4*theta) - 3*alphabb**2 - 8*alphabb*alphacc*cos(4*theta) + 8*alphabb*alphacc - 32*alphabc**2*cos(theta)**4 - 32*alphabc**2*cos(theta)**2 - 8*alphabc*alphacb*cos(4*theta) + 8*alphabc*alphacb - 32*alphaca**2*sin(theta)**4 - 32*alphacb**2*sin(theta)**4 + 8*alphacc**2*cos(4*theta) - 8*alphacc**2)/128
dalphadQ ZX -(-8*alphaaa**2*sin(theta)**2 + 3*alphaaa**2*cos(4*theta) - 3*alphaaa**2 + 16*alphaaa*alphabb*sin(theta)**2 + 2*alphaaa*alphabb*cos(4*theta) - 2*alphaaa*alphabb - 8*alphaaa*alphacc*cos(4*theta) + 8*alphaaa*alphacc - 24*alphaab**2*sin(theta)**2 + alphaab**2*cos(4*theta) - alphaab**2 + 16*alphaab*alphaba*sin(theta)**2 + 2*alphaab*alphaba*cos(4*theta) - 2*alphaab*alphaba - 32*alphaac**2*sin(theta)**4 - 8*alphaac*alphaca*cos(4*theta) + 8*alphaac*alphaca - 24*alphaba**2*sin(theta)**2 + alphaba**2*cos(4*theta) - alphaba**2 - 8*alphabb**2*sin(theta)**2 + 3*alphabb**2*cos(4*theta) - 3*alphabb**2 - 8*alphabb*alphacc*cos(4*theta) + 8*alphabb*alphacc - 32*alphabc**2*sin(theta)**4 - 8*alphabc*alphacb*cos(4*theta) + 8*alphabc*alphacb - 32*alphaca**2*cos(theta)**4 - 32*alphaca**2*cos(theta)**2 - 32*alphacb**2*cos(theta)**4 - 32*alphacb**2*cos(theta)**2 + 8*alphacc**2*cos(4*theta) - 8*alphacc**2)/128
dalphadQ ZY -(-8*alphaaa**2*sin(theta)**2 + 3*alphaaa**2*cos(4*theta) - 3*alphaaa**2 + 16*alphaaa*alphabb*sin(theta)**2 + 2*alphaaa*alphabb*cos(4*theta) - 2*alphaaa*alphabb - 8*alphaaa*alphacc*cos(4*theta) + 8*alphaaa*alphacc - 24*alphaab**2*sin(theta)**2 + alphaab**2*cos(4*theta) - alphaab**2 + 16*alphaab*alphaba*sin(theta)**2 + 2*alphaab*alphaba*cos(4*theta) - 2*alphaab*alphaba - 32*alphaac**2*sin(theta)**4 - 8*alphaac*alphaca*cos(4*theta) + 8*alphaac*alphaca - 24*alphaba**2*sin(theta)**2 + alphaba**2*cos(4*theta) - alphaba**2 - 8*alphabb**2*sin(theta)**2 + 3*alphabb**2*cos(4*theta) - 3*alphabb**2 - 8*alphabb*alphacc*cos(4*theta) + 8*alphabb*alphacc - 32*alphabc**2*sin(theta)**4 - 8*alphabc*alphacb*cos(4*theta) + 8*alphabc*alphacb - 32*alphaca**2*cos(theta)**4 - 32*alphaca**2*cos(theta)**2 - 32*alphacb**2*cos(theta)**4 - 32*alphacb**2*cos(theta)**2 + 8*alphacc**2*cos(4*theta) - 8*alphacc**2)/128
dalphadQ ZZ (6*alphaaa**2*sin(theta)**4 + 4*alphaaa*alphabb*sin(theta)**4 - 2*alphaaa*alphacc*cos(4*theta) + 2*alphaaa*alphacc + 2*alphaab**2*sin(theta)**4 + 4*alphaab*alphaba*sin(theta)**4 - alphaac**2*cos(4*theta) + alphaac**2 - 2*alphaac*alphaca*cos(4*theta) + 2*alphaac*alphaca + 2*alphaba**2*sin(theta)**4 + 6*alphabb**2*sin(theta)**4 - 2*alphabb*alphacc*cos(4*theta) + 2*alphabb*alphacc - alphabc**2*cos(4*theta) + alphabc**2 - 2*alphabc*alphacb*cos(4*theta) + 2*alphabc*alphacb - alphaca**2*cos(4*theta) + alphaca**2 - alphacb**2*cos(4*theta) + alphacb**2 + 16*alphacc**2*cos(theta)**4)/16
for SFG
iso tropic (all uniform)
XXX 0
XXY 0
XXZ 0
XYX 0
XYY 0
XYZ alphaab*muc/6 - alphaac*mub/6 - alphaba*muc/6 + alphabc*mua/6 + alphaca*mub/6 - alphacb*mua/6
XZX 0
XZY -alphaab*muc/6 + alphaac*mub/6 + alphaba*muc/6 - alphabc*mua/6 - alphaca*mub/6 + alphacb*mua/6
XZZ 0
YXX 0
YXY 0
YXZ -alphaab*muc/6 + alphaac*mub/6 + alphaba*muc/6 - alphabc*mua/6 - alphaca*mub/6 + alphacb*mua/6
YYX 0
YYY 0
YYZ 0
YZX alphaab*muc/6 - alphaac*mub/6 - alphaba*muc/6 + alphabc*mua/6 + alphaca*mub/6 - alphacb*mua/6
YZY 0
YZZ 0
ZXX 0
ZXY alphaab*muc/6 - alphaac*mub/6 - alphaba*muc/6 + alphabc*mua/6 + alphaca*mub/6 - alphacb*mua/6
ZXZ 0
ZYX -alphaab*muc/6 + alphaac*mub/6 + alphaba*muc/6 - alphabc*mua/6 - alphaca*mub/6 + alphacb*mua/6
ZYY 0
ZYZ 0
ZZX 0
ZZY 0
ZZZ 0
phi, psi uniform (theta unspecified)
XXX 0
XXY 0
XXZ (alphaaa*muc*cos(theta)**2 + alphaaa*muc - alphaac*mua*sin(theta)**2 + alphabb*muc*cos(theta)**2 + alphabb*muc - alphabc*mub*sin(theta)**2 - alphaca*mua*sin(theta)**2 - alphacb*mub*sin(theta)**2 + 2*alphacc*muc*sin(theta)**2)*cos(theta)/4
XYX 0
XYY 0
XYZ (2*alphaab*muc*cos(theta)**2 - alphaac*mub*sin(theta)**2 - 2*alphaba*muc*cos(theta)**2 + alphabc*mua*sin(theta)**2 + alphaca*mub*sin(theta)**2 - alphacb*mua*sin(theta)**2)/4
XZX -(alphaaa*muc*sin(theta)**2 - alphaac*mua*cos(theta)**2 - alphaac*mua + alphabb*muc*sin(theta)**2 - alphabc*mub*cos(theta)**2 - alphabc*mub + alphaca*mua*sin(theta)**2 + alphacb*mub*sin(theta)**2 - 2*alphacc*muc*sin(theta)**2)*cos(theta)/4
XZY -(alphaab*muc*sin(theta)**2 - 2*alphaac*mub*cos(theta)**2 - alphaba*muc*sin(theta)**2 + 2*alphabc*mua*cos(theta)**2 + alphaca*mub*sin(theta)**2 - alphacb*mua*sin(theta)**2)/4
XZZ 0
YXX 0
YXY 0
YXZ -(2*alphaab*muc*cos(theta)**2 - alphaac*mub*sin(theta)**2 - 2*alphaba*muc*cos(theta)**2 + alphabc*mua*sin(theta)**2 + alphaca*mub*sin(theta)**2 - alphacb*mua*sin(theta)**2)/4
YYX 0
YYY 0
YYZ (alphaaa*muc*cos(theta)**2 + alphaaa*muc - alphaac*mua*sin(theta)**2 + alphabb*muc*cos(theta)**2 + alphabb*muc - alphabc*mub*sin(theta)**2 - alphaca*mua*sin(theta)**2 - alphacb*mub*sin(theta)**2 + 2*alphacc*muc*sin(theta)**2)*cos(theta)/4
YZX (alphaab*muc*sin(theta)**2 - 2*alphaac*mub*cos(theta)**2 - alphaba*muc*sin(theta)**2 + 2*alphabc*mua*cos(theta)**2 + alphaca*mub*sin(theta)**2 - alphacb*mua*sin(theta)**2)/4
YZY -(alphaaa*muc*sin(theta)**2 - alphaac*mua*cos(theta)**2 - alphaac*mua + alphabb*muc*sin(theta)**2 - alphabc*mub*cos(theta)**2 - alphabc*mub + alphaca*mua*sin(theta)**2 + alphacb*mub*sin(theta)**2 - 2*alphacc*muc*sin(theta)**2)*cos(theta)/4
YZZ 0
ZXX -(alphaaa*muc*sin(theta)**2 + alphaac*mua*sin(theta)**2 + alphabb*muc*sin(theta)**2 + alphabc*mub*sin(theta)**2 - alphaca*mua*cos(theta)**2 - alphaca*mua - alphacb*mub*cos(theta)**2 - alphacb*mub - 2*alphacc*muc*sin(theta)**2)*cos(theta)/4
ZXY (alphaab*muc*sin(theta)**2 - alphaac*mub*sin(theta)**2 - alphaba*muc*sin(theta)**2 + alphabc*mua*sin(theta)**2 + 2*alphaca*mub*cos(theta)**2 - 2*alphacb*mua*cos(theta)**2)/4
ZXZ 0
ZYX -(alphaab*muc*sin(theta)**2 - alphaac*mub*sin(theta)**2 - alphaba*muc*sin(theta)**2 + alphabc*mua*sin(theta)**2 + 2*alphaca*mub*cos(theta)**2 - 2*alphacb*mua*cos(theta)**2)/4
ZYY -(alphaaa*muc*sin(theta)**2 + alphaac*mua*sin(theta)**2 + alphabb*muc*sin(theta)**2 + alphabc*mub*sin(theta)**2 - alphaca*mua*cos(theta)**2 - alphaca*mua - alphacb*mub*cos(theta)**2 - alphacb*mub - 2*alphacc*muc*sin(theta)**2)*cos(theta)/4
ZYZ 0
ZZX 0
ZZY 0
ZZZ (alphaaa*muc*sin(theta)**2 + alphaac*mua*sin(theta)**2 + alphabb*muc*sin(theta)**2 + alphabc*mub*sin(theta)**2 + alphaca*mua*sin(theta)**2 + alphacb*mub*sin(theta)**2 + 2*alphacc*muc*cos(theta)**2)*cos(theta)/2
